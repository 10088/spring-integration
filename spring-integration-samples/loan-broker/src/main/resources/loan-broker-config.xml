<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration.xsd">

	<gateway id="loanBrokerGateway"
			default-request-channel="loanBrokerPreProcessingChannel"
			service-interface="org.springframework.integration.loanbroker.LoanBrokerGateway">
		<method name="getLoanQuote">
			<header name="RESPONSE_TYPE" value="BEST"/>
		</method>
	</gateway>

	<chain input-channel="loanBrokerPreProcessingChannel">
		<header-enricher>
			<header name="CREDIT_SCORE" ref="creditBureau" method="getCreditScore"/>
		</header-enricher>
		<router expression="headers['CREDIT_SCORE'].score > 780
				? @banks.?[value.equals('premier')].keySet()
				: @banks.?[value.equals('secondary')].keySet()"
				apply-sequence="true"/>
	</chain>

	<!-- Messages are sent to the banks via bank channels and will be received and processed by an aggregator -->
	
	<aggregator input-channel="quotesAggregationChannel" method="aggregateQuotes">
		<beans:bean class="org.springframework.integration.loanbroker.LoanQuoteAggregator"/>
	</aggregator>
	
</beans:beans>
